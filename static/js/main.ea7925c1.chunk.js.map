{"version":3,"sources":["Squarecomponent.jsx","App.js","reportWebVitals.js","index.js"],"names":["Squarecomponent","props","classes","className","onClick","state","initialState","App","useState","gameState","UpdateGameState","isXchance","updateIsXchance","onSquareClicked","index","strings","Array","from","useEffect","winner","checkWinner","alert","lines","i","length","a","b","c","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ea7925c1.chunk.js","sourcesContent":["import React from 'react'\r\n// import   \r\nconst Squarecomponent=(props)=> {\r\n    const classes = props.className?`${props.className} square`:\"square\";\r\n    return (\r\n        // <span style={{border:\"1px solid red\",padding:\"30px\"}}>x</span>\r\n        <span className={classes} onClick={props.onClick}>\r\n        {props.state}\r\n        </span>\r\n    );  \r\n}  \r\n\r\nexport default Squarecomponent;\r\n \r\n\r\n","import {useState, useEffect} from 'react'\nimport Squarecomponent from './Squarecomponent';\nconst initialState=[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"]\n\nfunction App () {\n  const [gameState, UpdateGameState] = useState(initialState);\n  const [isXchance, updateIsXchance] = useState(false);\n\n\n  const onSquareClicked = (index) => {\n    let strings= Array.from(gameState);\n    if(strings[index] == \"\"){\n    strings[index]= isXchance ? \"x\":\"0\";\n    UpdateGameState(strings);\n    updateIsXchance(! isXchance);\n    }\n  }\n\n  useEffect(() => {\n    const winner = checkWinner();\n    if(winner){\n      alert(`Hurrey! ${winner} has won the game!`)\n      UpdateGameState(initialState);\n    }\n    \n  }, [gameState])\n\n  const checkWinner = ()=>{\n    const lines = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6],\n    ];\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n      if (gameState[a] && gameState[a] === gameState[b] && gameState[a] === gameState[c]) {\n        return gameState[a];\n      }\n    }\n    return null;\n  }\n\n  // const [gameState, UpdateGameState] = useState(initialState);\n  return (\n    <div className=\"app-header\">\n      <p className=\"heading-text\">React Tic-Tac-Toe</p>\n      <div className=\"jc-center row\">\n        <Squarecomponent className=\"b-bottom-right\" state={gameState[0]} onClick = {()=>onSquareClicked(0)} />\n        <Squarecomponent className=\"b-bottom-right\" state={gameState[1]} onClick = {()=>onSquareClicked(1)} />\n        <Squarecomponent className=\"b-bottom\" state={gameState[2]} onClick = {()=>onSquareClicked(2)} />\n      </div>\n      <div className=\"jc-center row\">\n      <Squarecomponent className=\"b-bottom-right\" state={gameState[3]} onClick = {()=>onSquareClicked(3)} />\n        <Squarecomponent className=\"b-bottom-right\" state={gameState[4]} onClick = {()=>onSquareClicked(4)} />\n        <Squarecomponent className=\"b-bottom\" state={gameState[5]} onClick = {()=>onSquareClicked(5)} />\n      </div>\n      <div className=\"jc-center row\">\n        <Squarecomponent className=\"b-right\" state={gameState[6]} onClick = {()=>onSquareClicked(6)} />\n        <Squarecomponent className=\"b-right\" state={gameState[7]} onClick = {()=>onSquareClicked(7)} />\n        <Squarecomponent state={gameState[8]} onClick = {()=>onSquareClicked(8)} />\n      </div>\n      <button className=\"clear-button\" onClick={()=> UpdateGameState(initialState)}>Clear Game</button>\n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n"," import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}